%div{id: "plot_#{algorithm_calculator.name}"}

:javascript

  function algorithm_eq_#{algorithm_calculator.name}() {
    let str = "#{algorithm_calculator.default_eq}"
    $("input#algorithm_calculator_eq.#{algorithm_calculator.name}").val(str)
    return str
  }
  function plot_#{algorithm_calculator.name}() {
    draw($("input#algorithm_calculator_eq.#{algorithm_calculator.name}").val(), "plot_#{algorithm_calculator.name}", ["#{algorithm_calculator.abscissa_min}", "#{algorithm_calculator.abscissa_max}", "#{algorithm_calculator.abscissa_intervall}"])
  }

  function calculateFactor_#{algorithm_calculator.name}() {
    let amount_eq = algorithm_eq_#{algorithm_calculator.name}().replace("**", "^")
    let opts = {
      x: parseFloat($("input#algorithm_input.#{algorithm_calculator.name}").val()),
    }
    const algorithm_calculator = calculateExpression(amount_eq, opts)
    $("span.algorithm_calculator.#{algorithm_calculator.name}").html(formatFactor(algorithm_calculator))
    return algorithm_calculator
  }

  document.getElementById("algorithm_calculator_form_#{algorithm_calculator.name}").onsubmit = function (event) {
    plot_#{algorithm_calculator.name}()
    event.preventDefault()
  }
  
  $('input#algorithm_input').on('keyup change paste', function(){
    calculateFactor_#{algorithm_calculator.name}()
  })
  calculateFactor_#{algorithm_calculator.name}()
  plot_#{algorithm_calculator.name}()

