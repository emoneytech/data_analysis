#card-amount-evaluated-movements.card.card-outline.card-warning
  .card-header
    .card-title
      .input-group.input-group-sm{style: "width: 220px"}
        .input-group-prepend
          %span#amount-opts.input-group-text= opts[:filter][:in_out]
        %input#daterange.form-control{type: 'text', readonly: true, value: "#{opts[:filter][:daterange]}", width: "40"}
    .card-tools
      .btn-group.btn-group-sm.btn-group-toggle.m-0{"data-toggle" => "buttons"}
        %label.btn.btn-outline-warning
          %input#amount-all{:autocomplete => "off", :checked => "checked", :name => "amount-directions", value: "ALL", :type => "radio"}/
          ALL
        %label.btn.btn-outline-success
          %input#amount-in{:autocomplete => "off", :name => "amount-directions", :type => "radio", value: "IN"}/
          IN
        %label.btn.btn-outline-danger
          %input#amount-out{:autocomplete => "off", :name => "amount-directions", :type => "radio", value: "OUT"}/
          OUT
  .card-body
    = column_chart amount_evaluated_movements_data_analysis_charts_path(params: opts), remote: true, download: true, stacked: true, thousands: "'", prefix: "â‚¬", id: 'amount-evaluated-movements-chart'

:javascript
  $('input[type=radio][name=amount-directions]').change(function() {
    setGraphicsClass('#card-amount-evaluated-movements', this.value)
    const url = "/data_analysis/charts/amount_evaluated_movements?filter[in_out]=" + this.value +
      "&group_by_day=#{opts[:group_by_day]}" +
      "&period=#{opts[:period]}" +
      "&filter[daterange]=#{opts[:filter][:daterange]}"
    refreshChart('amount-evaluated-movements-chart', url)
  })
